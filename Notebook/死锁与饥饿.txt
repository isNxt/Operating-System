死锁与饥饿:

定义(单进程死锁)
资源(可消费/可重用)
资源分配图:
进程:圆圈
资源:方框
资源实例:方框中的黑点
申请资源:一个从圆圈指向方框的有向线段
代理资源:从黑点到圆圈的有向线段
死锁的四个条件(充分必要):
    1.互斥:资源的特有属性,难以被打破
    2.占有且等待(互相等待)
    3.不可抢占(不能抢别的进程,不主动释放自己占有的资源)
    4.循环等待
>>解决方案:
    1.死锁预防:破坏四个条件之一
        a.互斥:不破坏
        b.占有且等待:占有不等待/等待不占有/不等待不占有>>资源打包一次性申请
        c.不可抢占:>>抢占别人,主动释放
        d.循环等待:>>资源线性化,编号>>只能申请已占有资源编号后面的资源
    2.死锁避免:避免发生死锁的条件(循环等待)
        a.进程启动拒绝>>所有的进程物理并行都能满足所有资源需要的时候才启动
        b.资源启动拒绝:
            (1)全状态:找到一条进程执行路径,使得所有进程都能执行完成(进程执行完成后,会释放所占有的所有资源)
            (2)不安全状态:找不到 vs 死锁(进程在执行过程中,不一定要等到进程执行结束,进程可能会释放所占有的资源)
            -银行家算法:
                (a)合法性判断
                (b)资源足够性判断
                (c)预分配
                (d)状态判断
                (e)执行分配(执行预分配/撤回预分配)
    3.死锁检测:不做任何进程启动和资源分配规定,周期性检测思索并解决
        -还原点(没死锁) 死锁>>4种方式(评价标准/选择标准)
        -综合策略:资源分组,组内线性化,组内按照资源特点管理
    
    -哲学家问题:
        死锁>>
        a.资源角度:增加可用资源
        b.资源使用角度:合理地使用>>
            (1)规则制定:偶数编号先左后右,奇数编号先右后左
            (2)限制使用,同时最多只有四个哲学家就餐.
        c.管程


    
