文件管理:
文件具有各种不同的属性和操作方法,有文件名唯一标识.
要访问文件,必须通过文件管理系统.
文件管理系统是访问文件的唯一途径.

文件管理系统的功能结构:
层次结构
	1.用户/程序
	2.访问层:文件结构,不同结构>>不同存取方法/数据方法>>堆,顺序文件,索引顺序文件,索引文件,散列或直接存取文件
	3.逻辑IO层:文件的记录,保障能以记录的形式访问文件
	4.IO监控层:选定设备,IO的初始化和终止,优化和调度,Cache和空闲块的选择
	5.物理IO层:传输(传送)>>数据以块的形式进行交换>>关注块在Cache(主存)中的位置>>不关注数据的结构和内容
	6.驱动层(通讯层/执行层):负责IO的启动和执行
	7.物理设备

文件管理系统流程(包括OS关注的)
以读写为例:
1.读操作
	a.用户程序发出指令(文件名和读操作指令)
	b.目录管理>>文件的存在性
	c.权限控制ACL>>访问的合法性
	d.文件的结构(记录的形式展现)
	e.访问的数据是否在Cache中,Yes,读取,否继续下一步
	f.IO调度与优化
	g.执行IO的读操作,数据>>Cache(如果Cache满,则需要执行替换策略)
	H.从Cache中读数据
	i.块分解记录
	j.访问给用户程序
2.写操作
	a.用户程序发出指令(文件名/写操作指令/记录形式的数据)
	b.目录管理>>文件的存在性
	c.权限控制ACL>>访问的合法性
	d.文件的结构(记录的形式展现)
	e.记录组块>>记录组合成块的形式
	f.是否需要写缓存?Yes,写入Cache(如果遇到Cache满,则替换)>>批或簇回写
	g.IO调度与优化
	h.空闲块的选择
	i.执行IO写操作
	j.返回执行结果
	
5种的逻辑组织形式:
1.堆:无序,自描述的,时间顺序存放,遍历查找
2.顺序文件:key,按key排序,新增>>日志或事务文件中>>批新增>>访问也是遍历查找(文件的性质)
3.索引顺序文件:顺序文件分块>>每个块的起点构建一个索引项>>查找:先通过索引项找到顺序文件所对应的块,然后在块中查找
>>顺序文件的索引也是一个顺序文件>>二级索引
>>构建索引可以提高查询速度

构建的时候,新增>>溢出文件>>批更新(同顺序文件)
索引文件:字段(域)构建索引(全部/部分/单个)
实际存放的时候可以是无序的
a.通过索引项的引用访问散列
b.直接存取文件:通过函数定位

B树
二叉树>>排序~>>平衡~
二叉>>多叉树>>排序与平衡>>B树

B树的节点:根节点,中间节点,叶子节点
根节点:至少一个key,两个指针
中间节点:N-1可以,N个指针
叶子节点:null指针,进用来表示树的结束
节点中的key是按顺序排序的
key左边的指针指向左子树(自述中所有的Key小于该节点key),右边反之
度为d的B树:
1.上下界:max key 3d-1, max pointers 3d; min key d-1, min pointers d-1
2.插入删除的时候,如果打破上下界,需要进行节点的分解和合并

